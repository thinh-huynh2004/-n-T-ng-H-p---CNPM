import React, { useState } from "react";
import "../assets/css/emp_bookreturnconfirm.css";
import sidebarIcon from "../assets/img/emp_managedocs_icondanhmuc.svg";

const BookReturnConfirm = () => {
  const [sortStates, setSortStates] = useState([true, true, true]);
  const [filterStatus, setFilterStatus] = useState("T·∫•t c·∫£");
  const [rows, setRows] = useState([
    {
      cccd: "001282946366",
      bookId: "CH1003",
      bookName: "H√≥a ƒë·∫°i c∆∞∆°ng",
      status: "ƒê√∫ng h·∫°n, nguy√™n v·∫πn",
      fine: "0",
      requestStatus: "ƒê√£ x·ª≠ l√Ω",
    },
    {
      cccd: "005225702399",
      bookId: "MT1003",
      bookName: "Gi·∫£i t√≠ch 1",
      status: "ƒê√∫ng h·∫°n, nguy√™n v·∫πn",
      fine: "0",
      requestStatus: "Ch∆∞a x·ª≠ l√Ω",
    },
    {
      cccd: "002301234798",
      bookId: "SP1031",
      bookName: "Tri·∫øt h·ªçc M√°c - L√™nin",
      status: "Tr·ªÖ 1 ng√†y, nguy√™n v·∫πn",
      fine: "10.000 VND",
      requestStatus: "Ch∆∞a x·ª≠ l√Ω",
    },
    {
      cccd: "001282946366",
      bookId: "PH1003",
      bookName: "V·∫≠t l√Ω 1",
      status: "Tr·ªÖ 7 ng√†y, nguy√™n v·∫πn",
      fine: "50.000 VND",
      requestStatus: "Ch∆∞a x·ª≠ l√Ω",
    },
    {
      cccd: "078901234567",
      bookId: "ME3005",
      bookName: "Thi·∫øt k·∫ø h·ªá th·ªëng c∆° ƒëi·ªán t·ª≠",
      status: "ƒê√∫ng h·∫°n, r√°ch b√¨a",
      fine: "20.000 VND",
      requestStatus: "Ch∆∞a x·ª≠ l√Ω",
    },
    {
      cccd: "090123456789",
      bookId: "TR3077",
      bookName: "Th√≠ nghi·ªám k·ªπ thu·∫≠t h√†ng kh√¥ng 1",
      status: "ƒê√∫ng h·∫°n, nguy√™n v·∫πn",
      fine: "0",
      requestStatus: "Ch∆∞a x·ª≠ l√Ω",
    },
    {
        cccd: "091343356418",
        bookId: "MT2013",
        bookName: "X√°c su·∫•t th·ªëng k√™",
        status: "ƒê√∫ng h·∫°n, nguy√™n v·∫πn",
        fine: "0",
        requestStatus: "Ch∆∞a x·ª≠ l√Ω",
    },
    {
        cccd: "035456789012",
        bookId: "PH1007",
        bookName: "Th√≠ nghi·ªám v·∫≠t l√Ω",
        status: "Tr·ªÖ 7 ng√†y, nguy√™n v·∫πn",
        fine: "50.000 VND",
        requestStatus: "Ch∆∞a x·ª≠ l√Ω",
    },
    {
        cccd: "098765432109",
        bookId: "SP1035",
        bookName: "Ch·ªß nghƒ©a x√£ h·ªôi khoa h·ªçc",
        status: "Tr·ªÖ 3 ng√†y, nguy√™n v·∫πn",
        fine: "30.000 VND",
        requestStatus: "Ch∆∞a x·ª≠ l√Ω",
    },
    {
        cccd: "052345678901",
        bookId: "IM1025",
        bookName: "Qu·∫£n l√Ω d·ª± √°n cho k·ªπ s∆∞",
        status: "Tr·ªÖ 2 ng√†y, nguy√™n v·∫πn",
        fine: "20.000 VND",
        requestStatus: "Ch∆∞a x·ª≠ l√Ω",
    },
    {
        cccd: "089012302137",
        bookId: "CO2013",
        bookName: "H·ªá c∆° s·ªü d·ªØ li·ªáu",
        status: "ƒê√∫ng h·∫°n, nguy√™n v·∫πn",
        fine: "0",
        requestStatus: "Ch∆∞a x·ª≠ l√Ω",
    },
    {
        cccd: "098033432346",
        bookId: "CO3001",
        bookName: "C√¥ng ngh·ªá ph·∫ßn m·ªÅm",
        status: "ƒê√∫ng h·∫°n, nguy√™n v·∫πn",
        fine: "0",
        requestStatus: "Ch∆∞a x·ª≠ l√Ω",
    },






  ]);

  // H√†m l·ªçc d·ªØ li·ªáu theo tr·∫°ng th√°i
  const filterTableByStatus = () => {
    if (filterStatus === "T·∫•t c·∫£") return rows;
    return rows.filter((row) =>
      filterStatus === "ƒê√£ x·ª≠ l√Ω"
        ? row.requestStatus === "ƒê√£ x·ª≠ l√Ω"
        : row.requestStatus === "Ch∆∞a x·ª≠ l√Ω"
    );
  };

  // H√†m s·∫Øp x·∫øp
  const sortTable = (columnIndex) => {
    const sortedRows = [...rows];
    const sortDirection = sortStates[columnIndex];
    setSortStates((prev) => {
      const newSortStates = [...prev];
      newSortStates[columnIndex] = !sortDirection;
      return newSortStates;
    });

    sortedRows.sort((a, b) => {
      const cellA = Object.values(a)[columnIndex];
      const cellB = Object.values(b)[columnIndex];
      return sortDirection
        ? cellA.localeCompare(cellB, "vi", { numeric: true })
        : cellB.localeCompare(cellA, "vi", { numeric: true });
    });

    setRows(sortedRows);
  };

  // H√†m x·ª≠ l√Ω y√™u c·∫ßu x√°c nh·∫≠n tr·∫£ s√°ch
  const confirmReturn = (index) => {
    const updatedRows = [...rows];
    updatedRows[index].requestStatus = "ƒê√£ x·ª≠ l√Ω";
    setRows(updatedRows);
    alert("X√°c nh·∫≠n tr·∫£ s√°ch th√†nh c√¥ng");
  };

  return (
    <div className="main-container">
      {/* Sidebar */}
      <aside className="sidebar">
        <h3>
          <img src={sidebarIcon} alt="Danh m·ª•c Icon" className="icon" />
          DANH M·ª§C
        </h3>
        <ul>
          <li>
            <a href="/borrow-register">ƒêƒÉng k√Ω m∆∞·ª£n</a>
          </li>
          <li>
            <a href="/request-extension">Y√™u c·∫ßu gia h·∫°n</a>
          </li>
          <li>
            <a href="/book-return">X√°c nh·∫≠n tr·∫£ s√°ch</a>
          </li>
          <li>
            <a href="/overdue-notice">Th√¥ng b√°o qu√° h·∫°n</a>
          </li>
        </ul>
      </aside>

      {/* Content */}
      <section className="content">
        <h2>X√ÅC NH·∫¨N TR·∫¢ S√ÅCH</h2>

        <div className="return-table-container">
          <table className="return-table" id="return-table">
            <thead>
              <tr>
                <th>
                  CCCD{" "}
                  <span
                    className="filter-icon"
                    onClick={() => sortTable(0)}
                  >
                    üîΩ
                  </span>
                </th>
                <th>
                  ID s√°ch{" "}
                  <span
                    className="filter-icon"
                    onClick={() => sortTable(1)}
                  >
                    üîΩ
                  </span>
                </th>
                <th>
                  T√™n s√°ch{" "}
                  <span
                    className="filter-icon"
                    onClick={() => sortTable(2)}
                  >
                    üîΩ
                  </span>
                </th>
                <th>Tr·∫°ng th√°i</th>
                <th>Ph√≠ ph·∫°t</th>
                <th>
                  X·ª≠ l√Ω y√™u c·∫ßu
                  <select
                    value={filterStatus}
                    onChange={(e) => setFilterStatus(e.target.value)}
                  >
                    <option value="T·∫•t c·∫£">T·∫•t c·∫£</option>
                    <option value="ƒê√£ x·ª≠ l√Ω">ƒê√£ x·ª≠ l√Ω</option>
                    <option value="Ch∆∞a x·ª≠ l√Ω">X√°c nh·∫≠n</option>
                  </select>
                </th>
              </tr>
            </thead>
            <tbody>
              {filterTableByStatus().map((row, index) => (
                <tr key={index}>
                  <td>{row.cccd}</td>
                  <td>{row.bookId}</td>
                  <td>{row.bookName}</td>
                  <td>{row.status}</td>
                  <td>{row.fine}</td>
                  <td className={`status ${row.requestStatus === "ƒê√£ x·ª≠ l√Ω" ? "processed" : "confirm"}`}>
                    {row.requestStatus === "Ch∆∞a x·ª≠ l√Ω" ? (
                      <span
                        className="confirm"
                        onClick={() => confirmReturn(index)}
                      >
                        X√°c nh·∫≠n
                      </span>
                    ) : (
                      "ƒê√£ x·ª≠ l√Ω"
                    )}
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </section>
    </div>
  );
};

export default BookReturnConfirm;
