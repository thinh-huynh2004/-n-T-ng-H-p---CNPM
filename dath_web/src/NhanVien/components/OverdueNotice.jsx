import React, { useState } from "react";
import "../assets/css/emp_overduenotice.css";
import sidebarIcon from "../assets/img/emp_managedocs_icondanhmuc.svg";

const OverdueNotice = () => {
  const [sortStates, setSortStates] = useState([true, true, true, true, true, true, true]);
  const [rows, setRows] = useState([
    {
        cccd: "079201200124",
        bookId: "MT1003",
        bookName: "Gi·∫£i t√≠ch 1",
        dueDate: "01/03/2024",
        overdueDays: 1,
        fine: "10.000 VNƒê",
        status: "ƒê√£ th√¥ng b√°o l·∫ßn 1",
    },
    {
        cccd: "091343356418",
        bookId: "MT2013",
        bookName: "X√°c su·∫•t th·ªëng k√™",
        dueDate: "11/04/2024",
        overdueDays: 1,
        fine: "10.000 VNƒê",
        status: "ƒê√£ th√¥ng b√°o l·∫ßn 1",
    },
    {
        cccd: "035456789012",
        bookId: "PH1007",
        bookName: "Th√≠ nghi·ªám v·∫≠t l√Ω",
        dueDate: "01/06/2024",
        overdueDays: 1,
        fine: "10.000 VNƒê",
        status: "ƒê√£ th√¥ng b√°o l·∫ßn 1",
    },
    {
        cccd: "089012345678",
        bookId: "AS3077",
        bookName: "C∆° s·ªü v·∫≠t l√Ω s·ª£i quang h·ªçc v√† ·ª©ng d·ª•ng",
        dueDate: "28/08/2024",
        overdueDays: 1,
        fine: "10.000 VNƒê",
        status: "ƒê√£ th√¥ng b√°o l·∫ßn 1",
    },
    {
        cccd: "090123456789",
        bookId: "TR3077",
        bookName: "Th√≠ nghi·ªám k·ªπ thu·∫≠t h√†ng kh√¥ng 1",
        dueDate: "26/12/2024",
        overdueDays: 1,
        fine: "10.000 VNƒê",
        status: "ƒê√£ th√¥ng b√°o l·∫ßn 1",
    },
    {
        cccd: "078901234567",
        bookId: "ME3005",
        bookName: "Thi·∫øt k·∫ø h·ªá th·ªëng c∆° ƒëi·ªán t·ª≠",
        dueDate: "09/08/2024",
        overdueDays: 1,
        fine: "10.000 VNƒê",
        status: "ƒê√£ th√¥ng b√°o l·∫ßn 1",
    },
    {
        cccd: "063789012345",
        bookId: "CH1003",
        bookName: "H√≥a ƒë·∫°i c∆∞∆°ng",
        dueDate: "19/05/2024",
        overdueDays: 2,
        fine: "20.000 VNƒê",
        status: "ƒê√£ th√¥ng b√°o l·∫ßn 1",
    },
    {
        cccd: "098765432109",
        bookId: "SP1035",
        bookName: "Ch·ªß nghƒ©a x√£ h·ªôi khoa h·ªçc",
        dueDate: "14/08/2024",
        overdueDays: 5,
        fine: "50.000 VNƒê",
        status: "ƒê√£ th√¥ng b√°o l·∫ßn 1",
    },
    {
        cccd: "052345678901",
        bookId: "IM1025",
        bookName: "Qu·∫£n l√Ω d·ª± √°n cho k·ªπ s∆∞",
        dueDate: "22/09/2024",
        overdueDays: 7,
        fine: "70.000 VNƒê",
        status: "ƒê√£ th√¥ng b√°o l·∫ßn 2",
    },
    {
        cccd: "098033432346",
        bookId: "CO3001",
        bookName: "C√¥ng ngh·ªá ph·∫ßn m·ªÅm",
        dueDate: "13/09/2024",
        overdueDays: 10,
        fine: "100.000 VNƒê",
        status: "ƒê√£ th√¥ng b√°o l·∫ßn 2",
    },
    {
        cccd: "089012302137",
        bookId: "CO2013",
        bookName: "H·ªá c∆° s·ªü d·ªØ li·ªáu",
        dueDate: "29/10/2024",
        overdueDays: 15,
        fine: "150.000 VNƒê",
        status: "ƒê√£ th√¥ng b√°o l·∫ßn 2",
    },
    {
        cccd: "093456789012",
        bookId: "EE2009",
        bookName: "H·ªá th·ªëng m√°y t√≠nh v√† ng√¥n ng·ªØ l·∫≠p tr√¨nh",
        dueDate: "10/01/2025",
        overdueDays: 20,
        fine: "200.000 VNƒê",
        status: "ƒê√£ l·∫≠p bi√™n b·∫£n",
    },
  ]);

  // H√†m s·∫Øp x·∫øp b·∫£ng
  const sortTable = (columnIndex, isDate = false) => {
    const sortedRows = [...rows];
    const sortDirection = sortStates[columnIndex];
    setSortStates((prev) => {
      const newSortStates = [...prev];
      newSortStates[columnIndex] = !sortDirection;
      return newSortStates;
    });

    sortedRows.sort((a, b) => {
      const cellA = Object.values(a)[columnIndex];
      const cellB = Object.values(b)[columnIndex];
      if (isDate) {
        const dateA = new Date(cellA.split("/").reverse().join("-"));
        const dateB = new Date(cellB.split("/").reverse().join("-"));
        return sortDirection ? dateA - dateB : dateB - dateA;
      }
      return sortDirection
        ? cellA.toString().localeCompare(cellB.toString(), "vi", { numeric: true })
        : cellB.toString().localeCompare(cellA.toString(), "vi", { numeric: true });
    });

    setRows(sortedRows);
  };

  return (
    <div className="main-container">
      {/* Sidebar */}
      <aside className="sidebar">
        <h3>
          <img src={sidebarIcon} alt="Danh m·ª•c Icon" className="icon" />
          DANH M·ª§C
        </h3>
        <ul>
          <li>
            <a href="/borrow-register">ƒêƒÉng k√Ω m∆∞·ª£n</a>
          </li>
          <li>
            <a href="/request-extension">Y√™u c·∫ßu gia h·∫°n</a>
          </li>
          <li>
            <a href="/book-return">X√°c nh·∫≠n tr·∫£ s√°ch</a>
          </li>
          <li>
            <a href="/overdue-notice">Th√¥ng b√°o qu√° h·∫°n</a>
          </li>
        </ul>
      </aside>

      {/* Content */}
      <section className="content">
        <h2>TH√îNG B√ÅO QU√Å H·∫†N</h2>

        <div className="overdue-table-container">
          <table className="overdue-table">
            <thead>
              <tr>
                <th>
                  CCCD{" "}
                  <span className="filter-icon" onClick={() => sortTable(0)}>
                    üîΩ
                  </span>
                </th>
                <th>
                  ID s√°ch{" "}
                  <span className="filter-icon" onClick={() => sortTable(1)}>
                    üîΩ
                  </span>
                </th>
                <th>
                  T√™n s√°ch{" "}
                  <span className="filter-icon" onClick={() => sortTable(2)}>
                    üîΩ
                  </span>
                </th>
                <th>
                  Ng√†y h·∫πn tr·∫£{" "}
                  <span className="filter-icon" onClick={() => sortTable(3, true)}>
                    üîΩ
                  </span>
                </th>
                <th>
                  S·ªë ng√†y qu√° h·∫°n{" "}
                  <span className="filter-icon" onClick={() => sortTable(4)}>
                    üîΩ
                  </span>
                </th>
                <th>
                  Ph√≠ ph·∫°t{" "}
                  <span className="filter-icon" onClick={() => sortTable(5)}>
                    üîΩ
                  </span>
                </th>
                <th>
                  Tr·∫°ng th√°i{" "}
                  <span className="filter-icon" onClick={() => sortTable(6)}>
                    üîΩ
                  </span>
                </th>
              </tr>
            </thead>
            <tbody>
                {rows.map((row, index) => (
                    <tr key={index}>
                    <td>{row.cccd}</td>
                    <td>{row.bookId}</td>
                    <td>{row.bookName}</td>
                    <td>{row.dueDate}</td>
                    <td>{row.overdueDays}</td>
                    <td>{row.fine}</td>
                    <td
                        className={row.status === "ƒê√£ l·∫≠p bi√™n b·∫£n" ? "bold-red-text" : ""}
                    >
                        {row.status}
                    </td>
                    </tr>
                ))}
            </tbody>

          </table>
        </div>
      </section>
    </div>
  );
};

export default OverdueNotice;
